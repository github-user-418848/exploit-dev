from socket import *
from optparse import OptionParser
from threading import Thread
import time, threading

screenLock = threading.Semaphore(value=1)
opened_ports = []

def connScan(tgtHost, tgtPort):
    try:
        connSkt = socket(AF_INET, SOCK_STREAM)
        connSkt.connect((tgtHost, tgtPort))
        connSkt.send(b'\r\n')
        result = connSkt.recv(100)
        screenLock.acquire()
        opened_ports.append(str("[+] Port %d/tcp open" % tgtPort))
    except:
        screenLock.acquire()
    finally:
        screenLock.release()
        connSkt.close()

def portScan(tgtHost, tgtPorts):
    setdefaulttimeout(1)
    t = Thread(target = connScan, args = (tgtHost, int(tgtPorts)))
    t.start()

def main():
    parser = OptionParser()
    parser.add_option("-i", dest = "ip_addr", help = "Host name", type = "string")
    parser.add_option("-p", dest = "port", help = "Port number", type = "string")
    (options, args) = parser.parse_args()
    
    if (options.ip_addr == None) | (options.port == None):
        (options, args) = parser.parse_args(["-h"])
    else:
        host = options.ip_addr
        port = options.port
    if '-' in port:
        minPort = int(port.split('-')[0])
        maxPort = int(port.split('-')[1])
        for x in range (minPort, maxPort + 1):
            portScan(host, int(x))
    else: 
        portScan(host, port)
    for ports in opened_ports:
        print(ports)
    print("Time Elapsed: ", time.perf_counter())
    
if __name__ == '__main__':
    main()
